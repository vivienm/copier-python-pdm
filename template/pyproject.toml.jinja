[project]
name = "{{ distribution_name }}"
description = "{{ project_description }}"
readme = "README.md"
requires-python = ">={{ python_version }}"
license = {text = "{% if copyright_license == 'Proprietary' %}LicenseRef-Proprietary{% else %}{{ copyright_license }}{% endif %}"}
authors = [
    {name = "{{ author_fullname }}", email = "{{ author_email }}"},
]
dynamic = ["version"]
{% if project_type == "bin" %}
dependencies = [
    "click>=8.1.3",
]
{% else %}
dependencies = []
{% endif %}
{% if repository_hosted or pages_enabled %}

[project.urls]
{% if repository_hosted %}
repository = "{{ repository_url }}"
{% endif %}
{% if pages_enabled %}
documentation = "{{ pages_url }}/docs/"
{% endif %}
{% endif %}
{% if project_type == "bin" %}

[project.scripts]
{{ script_name }} = "{{ module_name }}.__main__:main"
{% endif %}


[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"


[tool.pdm]
distribution = {% if project_type == "lib" %}true{% else %}false{% endif %}

[tool.pdm.build]
package-dir = "src"

[tool.pdm.dev-dependencies]
dev = [
{% if project_type == "lib" %}
    "furo>=2022.6.21",
{% endif %}
    "mypy>=0.971",
    "nox>=2022.1.7",
    "pip-audit>=2.6.1",
    "pytest>=7.1.2",
    "ruff>=0.0.152",
{% if project_type == "lib" %}
    "sphinx>=5.1.0",
{% endif %}
]

[tool.pdm.version]
source = "scm"


[tool.mypy]
strict = true
exclude = ["^build/"]


[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = [
    "src",
    "tests",
]


[tool.ruff.lint]
extend-select= [
  "I",  # isort
]
# Disable fix for unused imports (`F401`).
unfixable = ["F401"]
