name: "Continuous integration"

on:
  push:
  pull_request:

concurrency:
  group: "ci-${{ '{{' }} github.ref {{ '}}' }}"
  cancel-in-progress: true

jobs:
{% if project_type == "lib" %}
  lock:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "pdm-project/setup-pdm@main"
    - run: "pdm lock"
    - uses: "actions/upload-artifact@v3"
      with:
        name: "pdm-lockfile"
        path: "./pdm.lock"
        retention-days: 7

{% endif %}
  black:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "black"

  isort:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "isort"

  ruff:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "ruff"

  mypy:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "mypy"

  pytest:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    strategy:
      matrix:
        python-version: ["3.10"]
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "pytest-${{ '{{' }} matrix.python-version {{ '}}' }}"
        python-version: "${{ '{{' }} matrix.python-version {{ '}}' }}"
    - uses: "actions/upload-artifact@v3"
      with:
        name: "coverage-data"
        path: "./.coverage.*"
        retention-days: 1

  coverage:
    needs: "pytest"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "actions/download-artifact@v3"
      with:
        name: "coverage-data"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "coverage"
{% if project_type == "lib" or pages_enabled %}

  sphinx:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "sphinx"
    - uses: "actions/upload-artifact@v3"
      with:
        name: "sphinx"
        path: "./docs/_build/html"
        retention-days: 7
{% endif %}

  safety:
{% if project_type == "lib" %}
    needs: "lock"
{% endif %}
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "./.github/actions/nox"
      with:
        nox-session: "safety"
{% if pages_enabled %}

  pages:
    if: "github.ref == format('refs/heads/{0}', github.event.repository.default_branch)"
    needs: "sphinx"
    permissions:
      pages: "write"
      id-token: "write"
    environment:
      name: "github-pages"
      url: "${{ '{{' }} steps.deployment.outputs.page_url {{ '}}' }}"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/download-artifact@v3"
      with:
        name: "sphinx"
        path: "${{ '{{' }} runner.temp {{ '}}' }}/pages/docs"
    - uses: "actions/upload-pages-artifact@v1"
      with:
        path: "${{ '{{' }} runner.temp {{ '}}' }}/pages"
    - id: "deployment"
      uses: "actions/deploy-pages@v1"
{% endif %}
